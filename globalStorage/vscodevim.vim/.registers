[["%",{"text":"keybindings.json","registerMode":0}],["/",{"text":"\\brep\\b","registerMode":0}],["\"",{"text":"// \"vim.normalModeKeyBindingsNonRecursive\": [\n//         {\n//             \"before\": [\n//                 \"<C-a>\"\n//             ],\n//             \"after\": [],\n//             \"commands\": [\n//                 {\n//                     \"command\": \"Select All\"\n//                 }\n//             ]\n//         },\n// ]\n\n// {\n//     // \"terminal.integrated.shell.windows\": \"C:\\\\windows\\\\Sysnative\\\\wsl.exe\"\n// ","registerMode":1}],["-",{"text":"}","registerMode":1}],["0",{"text":"{\n        \"key\": \"ctrl+oem_comma\", // setting.jsonを開く\n        \"command\": \"workbench.action.openSettingsJson\"\n    },\n    {\n        \"key\": \"f6\", // デバッグをカーソル位置まで進めて止める\n        \"command\": \"-workbench.action.debug.pause\",\n        \"when\": \"inDebugMode\"\n    },\n    {\n        \"key\": \"f6\", // デバッグをカーソル位置まで進めて止める\n        \"command\": \"editor.debug.action.runToCursor\"\n    },\n    {\n        \"key\": \"ctrl+p\", // クイックオープン時の次ファイル選択 (デフォルト削除)\n        \"command\": \"-workbench.action.quickOpenNavigateNextInFilePicker\",\n        \"when\": \"inFilesPicker && inQuickOpen\"\n    },\n    {\n        \"key\": \"ctrl+shift+p\", // クイックオープン時の前ファイル選択 (デフォルト削除)\n        \"command\": \"-workbench.action.quickOpenNavigatePreviousInFilePicker\",\n        \"when\": \"inFilesPicker && inQuickOpen\"\n    },\n    {\n        \"key\": \"ctrl+n\", // クイックオープン時の次ファイル選択\n        \"command\": \"workbench.action.quickOpenNavigateNextInFilePicker\",\n        \"when\": \"inFilesPicker && inQuickOpen\"\n    },\n    {\n        \"key\": \"ctrl+p\", // クイックオープン時の前ファイル選択\n        \"command\": \"workbench.action.quickOpenNavigatePreviousInFilePicker\",\n        \"when\": \"inFilesPicker && inQuickOpen\"\n    }","registerMode":1}],["1",{"text":"","registerMode":2}],["2",{"text":"","registerMode":2}],["3",{"text":",<r>\"vim.leader\": \"<space>\"","registerMode":2}],["4",{"text":"","registerMode":2}],["5",{"text":"    cout << seive[l] << endl;","registerMode":2}],["6",{"text":"","registerMode":2}],["7",{"text":"        if(f)l = mid;","registerMode":2}],["8",{"text":"        if(f)l = mid;\n    }","registerMode":2}],["9",{"text":"        else r = mid;","registerMode":2}],["*",{"text":"    {","registerMode":2}]]